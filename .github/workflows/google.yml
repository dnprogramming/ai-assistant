---
name: Build and Deploy to GKE

on:
  push:
    branches: [ "release" ]

env:
  BUCKET: ${{ secrets.GAR_BUCKET }}
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  OBJECT: ${{ secrets.GAR_OBJECT }}
  OBJECT1: ${{ secrets.GAR_OBJECT1 }}
  OBJECT2: ${{ secrets.GAR_OBJECT2 }}
  SAVE_LOCATION: ${{ secrets.GAR_SAVE_LOCATION }}
  SAVE_LOCATION1: ${{ secrets.GAR_SAVE_LOCATION1 }}
  SAVE_LOCATION2: ${{ secrets.GAR_SAVE_LOCATION2 }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: ${{ secrets.GKE_DEPLOYMENT_NAME }}
  REPOSITORY: ${{ secrets.GAR_REPOSITORY }}
  IMAGE: ${{ secrets.GAR_IMAGE }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run OSSAR
      uses: github/ossar-action@v1
      id: ossar

    - name: Upload OSSAR results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.ossar.outputs.sarifFile }}

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}

    - uses: google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Get File
      run: |-
        gcloud storage cp gs://$BUCKET/$OBJECT $SAVE_LOCATION

    - name: Get File
      run: |-
        gcloud storage cp gs://$BUCKET/$OBJECT1 $SAVE_LOCATION1

    - name: Get File
      run: |-
        gcloud storage cp gs://$BUCKET/$OBJECT2 $SAVE_LOCATION2

    - name: Configure Docker
      run: |-
        gcloud --quiet auth configure-docker

    - name: Build
      run: |-
        docker build \
        --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
        --build-arg GITHUB_SHA="$GITHUB_SHA" \
        --build-arg GITHUB_REF="$GITHUB_REF" \
        .
    - name: Set up Snyk CLI to check for security issues
      uses: snyk/actions/setup@1d672a455ab3339ef0a0021e1ec809165ee12fad
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Authenticate to Snyk
      run: snyk auth  ${{ secrets.SNYK_TOKEN }}

    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@1d672a455ab3339ef0a0021e1ec809165ee12fad
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        args: --file=Dockerfile

    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: snyk.sarif

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca
      with:
        image-ref: gcr.io/${{ secrets.GKE_PROJECT }}/${{ secrets.GAR_IMAGE }}:${{ github.sha }}
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
        digest=$(docker image inspect gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA --format '{{index .RepoDigests 0}}')
        echo "DIGEST=$digest" >> $GITHUB_ENV

    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GAR_LOCATION }}
        project_id: ${{ secrets.GKE_PROJECT_ID }}
        
    - name: Deploy
      run: |-
        digest="${DIGEST}"
        kubectl set image deployment/$IMAGE pythonai-sha256-1=$digest