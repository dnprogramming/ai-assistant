---
name: Build and Deploy to GKE

on:
  push:
    branches: [ "release" ]

env:
  BUCKET: ${{ secrets.GAR_BUCKET }}
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  OBJECT: ${{ secrets.GAR_OBJECT }}
  OBJECT1: ${{ secrets.GAR_OBJECT1 }}
  OBJECT2: ${{ secrets.GAR_OBJECT2 }}
  SAVE_LOCATION: ${{ secrets.GAR_SAVE_LOCATION }}
  SAVE_LOCATION1: ${{ secrets.GAR_SAVE_LOCATION1 }}
  SAVE_LOCATION2: ${{ secrets.GAR_SAVE_LOCATION2 }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: ${{ secrets.GKE_DEPLOYMENT_NAME }}
  REPOSITORY: ${{ secrets.GAR_REPOSITORY }}
  IMAGE: ${{ secrets.GAR_IMAGE }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}

    - uses: google-github-actions/setup-gcloud@5a5f7b85fca43e76e53463acaa9d408a03c98d3a
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Get File
      run: |-
        gcloud storage cp gs://$BUCKET/$OBJECT $SAVE_LOCATION

    - name: Get File
      run: |-
        gcloud storage cp gs://$BUCKET/$OBJECT1 $SAVE_LOCATION1

    - name: Get File
      run: |-
        gcloud storage cp gs://$BUCKET/$OBJECT2 $SAVE_LOCATION2

    - name: Configure Docker
      run: |-
        gcloud --quiet auth configure-docker

    - name: Build
      run: |-
        docker build \
        --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
        --build-arg GITHUB_SHA="$GITHUB_SHA" \
        --build-arg GITHUB_REF="$GITHUB_REF" \
        .

    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GAR_LOCATION }}
        project_id: ${{ secrets.GKE_PROJECT_ID }}
        
    - name: Deploy Generate Deployment File
      run: |-
        gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project gen-lang-client-0839206159 && kubectl get deployment pythonai -o yaml
        sed -i "s|image:.*|image: gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA|g" deployment.yaml
        kubectl apply -f deployment.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide